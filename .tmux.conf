# バグ対応（https://github.com/microsoft/WSL/issues/5931）
set -sg escape-time 50

# True Colorを利用する
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# 履歴を10000件まで
set -g history-limit 10000

# プレフィックスキーの設定（Ctrl+j）
unbind C-b
set -g prefix C-j

# 設定ファイルをリロードする（Ctrl+r）
bind r source-file ~/.tmux.conf \; display " Reloaded config!"

# Escキーの遅延を無くす
set -sg escape-time 0

# マウスを有効
# setw -g mouse on

## リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 10

# ウィンドウを閉じた時に番号を詰める
set-option -g renumber-windows on;

# prefix-keyの有効時間をミリ秒で指定
# bind-key -rで指定しているkeyはprefix-keyを再度押さなくとも連続で効く
set -g repeat-time 400
# display-message
set -g display-time 1500
# focus events
set -g focus-events on

# セッション番号を詰める
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' '\
  set-hook -g session-created "run ~/dotfiles/bin/tmux-reorder-sessions.sh"; \
  set-hook -g session-closed  "run ~/dotfiles/bin/tmux-reorder-sessions.sh"; \
'

#キーバインドをviにする
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection

# tmuxのbufferとxのclipboardを連携させる
if-shell 'type xsel' \
  "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel -ib'"
if-shell 'type xsel' \
  "bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'xsel -ib'"
if-shell 'type xsel' \
  "bind ] run-shell \
    'xsel -ob | xargs -0 -I{} tmux set-buffer -- {} && tmux paste-buffer'"

# ----------------------------------------
# Key bindings
# ----------------------------------------

# コマンドプロンプト
bind -n M-: command-prompt -p '>>>'

# ウィンドウの移動（Prefix+n, Prefix+p）
unbind <
unbind >
bind -r < run 'cw=$(tmux display-message -p \#I) && [ $cw -gt 0 ] && tmux swap-window -s $cw -t $(($cw - 1))'
bind -r > run 'cw=$(tmux display-message -p \#I) && tmux swap-window -s $cw -t $(($cw + 1))'

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# 同期操作の切り替え
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# 新しいウィンドウ(current-directoryを引き継ぐ)
unbind s
bind s new-window -c '#{pane_current_path}'

# ペインを分割(current-directoryを引き継ぐ)
bind M-% split-window -hc "#{pane_current_path}"
bind M-'"' split-window -vc "#{pane_current_path}"

# ----------------------------------------
# Status
# ----------------------------------------

set -g status on
set -g status-keys vi

# ステータスの位置
set -g status-justify centre

# ウィンドウ名の変更を許可する
set-window-option -g allow-rename on

# ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set  -g visual-activity on

# ステータスバーを設定する
set-window-option -g window-status-current-format "#[fg=colour230,bold] #I: #W #[default]"

# 左右のステータスラインの最大長
set -g status-left-length 50
set -g status-right-length 120

## 左パネルを設定する
set -g status-left \
"#{?client_prefix,#[dim],}#[fg=colour247,bold][#S] #(whoami)@#h #[default] "

## 右パネルを設定する
set -g status-right \
"#{?client_prefix,#[dim],}#(tmux show-options -g prefix) |#[fg=colour247,bold] %m/%d %H:%M:%S #[default]"

# ----------------------------------------
# Color
# ----------------------------------------

# status
set -g status-style fg=colour245,bg=colour238

# message
set -g message-style fg=colour250,bg=colour88
set -g message-command-style fg=colour250,bg=colour88

# window-status-format, window-status-current-format
setw -g window-status-style fg=default,bg=default
setw -g window-status-current-style fg=colour202,bg=default

# pane border
set -g pane-border-style fg=colour69,bg=default
set -g pane-active-border-style fg=colour69,bg=default

